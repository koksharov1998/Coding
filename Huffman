function Node(name, fr, used, code, father)
{
	this.name = name;
	this.fr = fr;
	this.used = used;
	this.code = code;
	this.father = father;
}
function encodeElement(x)
{
	fr = str.length;
	num = 0;
	for(i = 0; i < tree.length; i++)
		if((tree[i].fr < fr) && (tree[i].used == 0))
		{
			fr = tree[i].fr;
			num = i;
		}
	tree[num].used = 1;
	tree[num].code = x;
	tree[num].father = tree.length;
	return num;
}
WSH.Echo("Enter your string:");
str = WSH.StdIn.ReadLine();
alph = new Array();
for(i = 0; i < str.length; i++)
	alph[str.charAt(i)] = 0;
for(i=0;i<str.length;i++)
	alph[str.charAt(i)]++;
tree = new Array();
for(i in alph)
{
	WSH.Echo(i, " ", alph[i]);
	n = new Node(i, alph[i], 0, "", null);
	tree.push(n);
}
m = tree.length;
if (m != 1)
{
for(k = 1; k < m; k++)
{
	num1 = encodeElement(0);
	num2 = encodeElement(1);
	n = new Node(tree[num1].name + tree[num2].name, tree[num1].fr + tree[num2].fr, 0, '', null);
	tree.push(n);
}
WSH.Echo("name \t freq \t code \t father");
for(i=0; i < tree.length; i++)
	WSH.Echo(tree[i].name, "\t", tree[i].fr, "\t", tree[i].code, "\t", tree[i].father);
WSH.Echo("==========");
code_tab = new Array();
for(i = 0; i < m; i++)
{
	j = i;
	code_tab[tree[j].name] = "";
	while(tree[j].father)
	{
		code_tab[tree[i].name] = tree[j].code + code_tab[tree[i].name];
		j = tree[j].father;
	}
}
for(i in code_tab)
	WSH.Echo(i, " ", code_tab[i]);
WSH.Echo("==========");
}
else
{
WSH.Echo("name \t freq \t code \t father");
tree[0].code = 1;
WSH.Echo(tree[0].name, "\t", tree[0].fr, "\t", tree[0].code, "\t", tree[0].father);
WSH.Echo("==========");
code_tab = new Array();
code_tab[tree[0].name] = 0;
WSH.Echo(tree[0].name, " ", code_tab[tree[0].name]);
}
var reverse_tab = new Array();
for (i in code_tab)
	reverse_tab[code_tab[i]] = i;
WSH.Echo(str);
code_str = "";
for(i=0; i < str.length; i++)
	code_str += code_tab[str.charAt(i)];
WSH.Echo(code_str);
decode_str = "";
parseCode = "";
for(i=0; i < code_str.length; i++)
{
	parseCode += code_str.charAt(i);
	if  (reverse_tab[parseCode])
	{
		decode_str += reverse_tab[parseCode];
		parseCode = "";
	}
}
WSH.Echo(decode_str);
